type User @entity {
  "Trade event order owner"
  id: ID!
  "Owner's address"
  address: Bytes!
  "First trade block timestamp"
  firstTradeTimestamp: BigInt!
  "List of orders placed by this user"
  ordersPlaced: [Order!]! @derivedFrom(field: "owner")
}

type Token @entity {
  "Token address to hexString"
  id: ID!
  "Token address"
  address: Bytes!
  "First token trade block timestamp"
  firstTradeTimestamp: BigInt
  "Token name fetched by ERC20 contract call"
  name: String!
  "Token symbol fetched by contract call"
  symbol: String!
  "Token decimals fetched by contract call"
  decimals: Int!
  # derived price in ETH
  priceEth: BigDecimal!
  # derived price in ETH
  priceUsd: BigDecimal!
  # pools token is in that are allow listed for USD pricing
  allowedPools: [UniswapPool!]!
}

type Order @entity {
  "Trade's OrderUid to hex string"
  id: ID!
  "Trade's owner or presign User"
  owner: User
  "block's timestamp on trade event"
  tradesTimestamp: BigInt
  "block's timestamp on invalidate event"
  invalidateTimestamp: BigInt
  "block's timestamp on presign event"
  presignTimestamp: BigInt
  "Array of trades on the order"
  trades: [Trade!] @derivedFrom(field: "order")
  "Boolean value true by default unless is invalidated by the event"
  isValid: Boolean!
}

type Trade @entity {
  "This Id is composed using orderId|txHashString|eventIndex"
  id: ID!
  "Block's timestamp"
  timestamp: BigInt!
  "Transaction's gas price"
  gasPrice: BigInt!
  "Trade's fee amount"
  feeAmount: BigInt! 
  "Trade event transaction hash"
  txHash: Bytes!
  "Settlement"
  settlement: Settlement!
  "Trade event buyAmount"
  buyAmount: BigInt!
  "Trade event sellAmount"
  sellAmount: BigInt!
  "Trade event sellToken"
  sellToken: Token!
  "Trade event buyToken"
  buyToken: Token!
  "Order"
  order: Order!
}

type Settlement @entity {
  "TxHash"
  id: ID!
  "Transaction hash"
  txHash: Bytes!
  "First trade timestamp"
  firstTradeTimestamp: BigInt!
  "Collection of trades"
  trades: [Trade!] @derivedFrom(field: "settlement")
}

# stores for USD calculations
type Bundle @entity {
  id: ID!
  # price of ETH in usd
  ethPriceUSD: BigDecimal!
}

type UniswapPool @entity {
  # pool address
  id: ID!
  # token0
  token0: Token!
  # token1
  token1: Token!
  # in range liquidity
  liquidity: BigInt!
  # token0 per token1
  token0Price: BigDecimal!
  # token1 per token0
  token1Price: BigDecimal!
  # current tick
  tick: BigInt
  # total token 0 across all ticks
  totalValueLockedToken0: BigDecimal!
  # total token 1 across all ticks
  totalValueLockedToken1: BigDecimal!
}
